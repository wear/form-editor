var React = require('react');
var Dispatcher = require('flux').Dispatcher;
var ReactDOM = require('react-dom');
var Store = require('./Store');
var classNames = require('classNames');
var RowComponent = require('./RowComponent');

var RadioInput = React.createClass({displayName: "RadioInput",
  mixins: [InputMixin],
  render: function() {
    var options = this.props.options.map(function(item, i){
      var name = "q_" + i;
      var isAnswer = item.tag === 'answer';
      return (React.createElement(RadioOption, {label: item.label, name: name, isAnswer: isAnswer, key: i}));
    });

    return (
      React.createElement("div", {className: "form-group"}, 
        React.createElement("label", null, React.createElement(RowComponent, {lines: this.props.label})), 
        options, 
        React.createElement("div", {className: "help-block"}, this.props.tip)
      )
    );
  }
});


var RadioOption = React.createClass({displayName: "RadioOption",
  mixins: [OptionMixin],
  render: function(){
    var optionClass = classNames('radio', {'has-success' : this.props.isAnswer})

    return(
      React.createElement("div", {className: optionClass}, 
        React.createElement("label", null, 
          React.createElement("input", {type: "radio", name: this.props.name}), 
          React.createElement(RowComponent, {lines: this.props.label})
        )
      )
    )
  }
});

var CheckboxTag = React.createClass({displayName: "CheckboxTag",
  mixins: [InputMixin],
  render: function() {
    var options = this.props.options.map(function(item, i){
      var name = "q_" + i;
      var isAnswer = item.tag === 'answer';
      return (React.createElement(CheckOption, {label: item.label, name: name, isAnswer: isAnswer, key: i}));
    })

    return (
      React.createElement("div", {className: "form-group"}, 
        React.createElement("label", null, React.createElement(RowComponent, {lines: this.props.label})), 
        options, 
        React.createElement("div", {className: "help-block"}, this.props.tip)
      )
    );
  }
});

var CheckOption = React.createClass({displayName: "CheckOption",
  mixins: [OptionMixin],
  render: function(){
    var optionClass = classNames('checkbox', {'has-success' : this.props.isAnswer})

    return(
      React.createElement("div", {className: optionClass}, 
        React.createElement("label", null, 
          React.createElement("input", {type: "checkbox", name: this.props.name}), 
          React.createElement(RowComponent, {lines: this.props.label})
        )
      )
    )
  }
});

var InputMixin = {
  propTypes: {
    label: React.PropTypes.string.isRequired,
    options: React.PropTypes.array,
    tip: React.PropTypes.string
  }
}

var OptionMixin = {
  propTypes: {
    label: React.PropTypes.array.isRequired,
    name: React.PropTypes.string.isRequired,
    isAnswer: React.PropTypes.bool
  }
}

var FormComponent = React.createClass({displayName: "FormComponent",
  getInitialState: function(){
    return {inputs: []};
  },
  componentWillMount: function() {
    Store.addChangeListener(this.onDataChange);
  },
  onDataChange: function(){
    this.setState({inputs: Store.getData()});
  },
  componentWillUnmount: function() {
    Store.removeChangeListener(this.onDataChange);
  },
  render: function() {
    var inputs = this.state.inputs.map(function(input, i){
      switch(input.tag){
          case 'radio':
            return React.createElement(RadioInput, React.__spread({},  input, {key: i}))
          case 'checkbox':
            return React.createElement(CheckboxTag, React.__spread({},  input, {key: i, name: "s"}))
          default:
              // nope;
      }
    });
    return (
      React.createElement("form", null, 
        inputs
      )
    )
  }

});

module.exports = FormComponent;
