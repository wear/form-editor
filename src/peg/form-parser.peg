start=
  _* expr:expression _*
    {return expr;}

expression =
  s:section ns:newlineSection*
    {return [s].concat(ns); }

newlineSection =
  [\n]+ s:section
    {return s;}

section =
  '===' _* body:[^===]* _* '==='
    {return {tag:'p', body:body.join('')}}
 / t:typeMark lines:line*
    {
      var question = {tag: t, label: lines.shift(), options: []};
      var options = lines.filter(function(l){ return l.tag === 'option' });

      for (var i = 0; i < lines.length; i++) {
        var l = lines[i];
        switch(l.tag){
          case 'option':
            question.options.push(l);
          case 'tip':
            question.tip = l.body
        }
      }
      return question;
    }

line =
  [\n]+ !typeMark ![===] t:lineBody
    {return t;}

lineBody =
  a:optionMark [ ]+ expr:validchar+
    {return {label: expr.join(''), tag: 'option', answer: a};}
  /  ">" [ ]+ expr:validchar+
    {return {tag: 'tip', body: expr.join('')}}
  / expr:validchar+
    {return expr.join('')}

typeMark =
  '#单选题#'
    {return 'radio'}
  / '#多选题#'
    {return 'checkbox'}
  / '#段落#'
    {return 'p'}

_ =
  [ \n\t\r]

validchar =
  [^\n\r]

optionMark =
    "[]"
      {return false}
 /  "[*]"
      {return true}

