Start=
  _* e:Expression ne:NewLineExpression* _*
    {return [e].concat(ne); }

NewLineExpression =
  [\n]+ e:Expression
    {return e;}

Expression =
  Paragraph / Question

Paragraph =
  '===' body:(!'===' .)* '==='
    {
      return {
        tag: 'p',
        body: body.map(function(item){ return item[1]; }).join('')
      }
    }

Question =
  tag:TypeMark lines:QuestioLine*
    {
      var question = {tag: tag, label: lines.shift(), options: []};
      var options = lines.filter(function(l){ return l.tag === 'option' });

      for (var i = 0; i < lines.length; i++) {
        var l = lines[i];
        switch(l.tag){
          case 'option':
            question.options.push(l);
          case 'tip':
            question.tip = l.body
        }
      }
      return question;
    }

QuestioLine =
  [\n]+ !('===' / TypeMark) body:LineBody
    {return body;}

LineBody =
    Option
  / Tip
  / expr:Validchar+
      {return expr.join('')}

Option =
  answer:AnswerMark [ ]+ expr:Validchar+
    {return {label: expr.join(''), tag: 'option', answer: answer};}

Tip =
  ">" [ ]+ expr:Validchar+
    {return {tag: 'tip', body: expr.join('')}}

AnswerMark =
    "[]"
      {return false}
 /  "[*]"
      {return true}

TypeMark =
    '#单选题#'
      {return 'radio'}
  / '#多选题#'
      {return 'checkbox'}
  / '#段落#'
      {return 'p'}

_ =
  [ \n\t\r]

Validchar =
  [^\n\r]

